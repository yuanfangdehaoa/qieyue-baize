%%%=============================================================================
%%% @author z.hua
%%% @doc
%%%
%%% @end
%%%=============================================================================

-module(ut_math).

%% API
-export([ceil/1, floor/1, calc/3]).

%%%-----------------------------------------------------------------------------
%%% API Functions
%%%-----------------------------------------------------------------------------

%%-----------------------------------------------
%% @ 向上取整
-spec ceil(number()) ->
    integer().
%%-----------------------------------------------
ceil(X) ->
    T = trunc(X),
    case X == T of
    	true  -> T;
    	false -> T + 1
    end.


%%-----------------------------------------------
%% @ 向下取整
-spec floor(number()) ->
    integer().
%%-----------------------------------------------
floor(X) ->
    T = trunc(X),
    case X < T of
    	true  -> T - 1;
    	false -> T
    end.

calc(_Num, '=', Equal) ->
    Equal;
calc(Num, '+', Add) ->
    Num+Add;
calc(Num, '-', Reduce) ->
    Num-Reduce.

%%%-----------------------------------------------------------------------------
%%% Internal Functions
%%%-----------------------------------------------------------------------------
