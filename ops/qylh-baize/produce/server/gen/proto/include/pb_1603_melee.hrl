%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.5.1

-ifndef(pb_1603_melee).
-define(pb_1603_melee, true).

-define(pb_1603_melee_gpb_version, "4.5.1").

-ifndef('M_MELEE_INFO_TOS_PB_H').
-define('M_MELEE_INFO_TOS_PB_H', true).
-record(m_melee_info_tos,
        {
        }).
-endif.

-ifndef('M_MELEE_INFO_TOC_PB_H').
-define('M_MELEE_INFO_TOC_PB_H', true).
-record(m_melee_info_toc,
        {activity_id            :: integer(),       % = 1, 32 bits
         boss_refresh           :: integer(),       % = 2, 32 bits
         etime                  :: integer()        % = 3, 32 bits
        }).
-endif.

-ifndef('M_MELEE_SELF_TOC_PB_H').
-define('M_MELEE_SELF_TOC_PB_H', true).
-record(m_melee_self_toc,
        {rank                   :: integer(),       % = 1, 32 bits
         score                  :: integer(),       % = 2, 32 bits
         exp                    :: non_neg_integer() % = 3, 32 bits
        }).
-endif.

-ifndef('M_MELEE_DAMAGE_RANK_TOS_PB_H').
-define('M_MELEE_DAMAGE_RANK_TOS_PB_H', true).
-record(m_melee_damage_rank_tos,
        {
        }).
-endif.

-ifndef('M_MELEE_DAMAGE_RANK_TOC_PB_H').
-define('M_MELEE_DAMAGE_RANK_TOC_PB_H', true).
-record(m_melee_damage_rank_toc,
        {ranks = []             :: [pb_1603_melee:p_melee_rank()] | undefined % = 1
        }).
-endif.

-ifndef('M_MELEE_SCORE_RANK_TOS_PB_H').
-define('M_MELEE_SCORE_RANK_TOS_PB_H', true).
-record(m_melee_score_rank_tos,
        {
        }).
-endif.

-ifndef('M_MELEE_SCORE_RANK_TOC_PB_H').
-define('M_MELEE_SCORE_RANK_TOC_PB_H', true).
-record(m_melee_score_rank_toc,
        {ranks = []             :: [pb_1603_melee:p_melee_rank()] | undefined % = 1
        }).
-endif.

-ifndef('M_MELEE_ROUND_END_TOC_PB_H').
-define('M_MELEE_ROUND_END_TOC_PB_H', true).
-record(m_melee_round_end_toc,
        {boss_refresh           :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_MELEE_ROUND_BEGIN_TOC_PB_H').
-define('M_MELEE_ROUND_BEGIN_TOC_PB_H', true).
-record(m_melee_round_begin_toc,
        {
        }).
-endif.

-ifndef('M_MELEE_REWARD_TOC_PB_H').
-define('M_MELEE_REWARD_TOC_PB_H', true).
-record(m_melee_reward_toc,
        {rank                   :: integer(),       % = 1, 32 bits
         rewards = #{}          :: #{integer() := non_neg_integer()} | undefined % = 2
        }).
-endif.

-ifndef('P_MELEE_RANK_PB_H').
-define('P_MELEE_RANK_PB_H', true).
-record(p_melee_rank,
        {rank                   :: integer(),       % = 1, 32 bits
         name                   :: iolist(),        % = 2
         val                    :: integer()        % = 3, 32 bits
        }).
-endif.

-endif.
