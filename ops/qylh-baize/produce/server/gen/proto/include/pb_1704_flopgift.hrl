%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.5.1

-ifndef(pb_1704_flopgift).
-define(pb_1704_flopgift, true).

-define(pb_1704_flopgift_gpb_version, "4.5.1").

-ifndef('P_FLOP_DATA_PB_H').
-define('P_FLOP_DATA_PB_H', true).
-record(p_flop_data,
        {pos                    :: integer(),       % = 1, 32 bits
         item_id                :: integer(),       % = 2, 32 bits
         item_count             :: integer()        % = 3, 32 bits
        }).
-endif.

-ifndef('P_FLOP_ROUND_DATA_PB_H').
-define('P_FLOP_ROUND_DATA_PB_H', true).
-record(p_flop_round_data,
        {round                  :: integer(),       % = 1, 32 bits
         fetch = []             :: [pb_1704_flopgift:p_flop_data()] | undefined % = 2
        }).
-endif.

-ifndef('M_FLOPGIFT_INFO_TOS_PB_H').
-define('M_FLOPGIFT_INFO_TOS_PB_H', true).
-record(m_flopgift_info_tos,
        {
        }).
-endif.

-ifndef('M_FLOPGIFT_INFO_TOC_PB_H').
-define('M_FLOPGIFT_INFO_TOC_PB_H', true).
-record(m_flopgift_info_toc,
        {level                  :: integer(),       % = 1, 32 bits
         cur_round              :: integer(),       % = 2, 32 bits
         flop_round_data = []   :: [pb_1704_flopgift:p_flop_round_data()] | undefined % = 3
        }).
-endif.

-ifndef('M_FLOPGIFT_TURN_TOS_PB_H').
-define('M_FLOPGIFT_TURN_TOS_PB_H', true).
-record(m_flopgift_turn_tos,
        {pos                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_FLOPGIFT_TURN_TOC_PB_H').
-define('M_FLOPGIFT_TURN_TOC_PB_H', true).
-record(m_flopgift_turn_toc,
        {flop_data              :: pb_1704_flopgift:p_flop_data() % = 1
        }).
-endif.

-ifndef('M_FLOPGIFT_NEXT_ROUND_TOS_PB_H').
-define('M_FLOPGIFT_NEXT_ROUND_TOS_PB_H', true).
-record(m_flopgift_next_round_tos,
        {
        }).
-endif.

-ifndef('M_FLOPGIFT_NEXT_ROUND_TOC_PB_H').
-define('M_FLOPGIFT_NEXT_ROUND_TOC_PB_H', true).
-record(m_flopgift_next_round_toc,
        {round                  :: integer()        % = 1, 32 bits
        }).
-endif.

-endif.
