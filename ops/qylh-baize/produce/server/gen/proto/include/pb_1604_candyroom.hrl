%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.5.1

-ifndef(pb_1604_candyroom).
-define(pb_1604_candyroom, true).

-define(pb_1604_candyroom_gpb_version, "4.5.1").

-ifndef('M_CANDYROOM_INFO_TOS_PB_H').
-define('M_CANDYROOM_INFO_TOS_PB_H', true).
-record(m_candyroom_info_tos,
        {
        }).
-endif.

-ifndef('M_CANDYROOM_INFO_TOC_PB_H').
-define('M_CANDYROOM_INFO_TOC_PB_H', true).
-record(m_candyroom_info_toc,
        {activity_id            :: integer(),       % = 1, 32 bits
         etime                  :: integer(),       % = 2, 32 bits
         exp                    :: non_neg_integer(), % = 3, 32 bits
         top                    :: pb_1604_candyroom:p_candyroom_rank() | undefined % = 4
        }).
-endif.

-ifndef('M_CANDYROOM_RANK_TOS_PB_H').
-define('M_CANDYROOM_RANK_TOS_PB_H', true).
-record(m_candyroom_rank_tos,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_CANDYROOM_RANK_TOC_PB_H').
-define('M_CANDYROOM_RANK_TOC_PB_H', true).
-record(m_candyroom_rank_toc,
        {ranks = []             :: [pb_1604_candyroom:p_candyroom_rank()] | undefined % = 1
        }).
-endif.

-ifndef('M_CANDYROOM_GIFT_INFO_TOS_PB_H').
-define('M_CANDYROOM_GIFT_INFO_TOS_PB_H', true).
-record(m_candyroom_gift_info_tos,
        {
        }).
-endif.

-ifndef('M_CANDYROOM_GIFT_INFO_TOC_PB_H').
-define('M_CANDYROOM_GIFT_INFO_TOC_PB_H', true).
-record(m_candyroom_gift_info_toc,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_CANDYROOM_SEND_GIFT_TOS_PB_H').
-define('M_CANDYROOM_SEND_GIFT_TOS_PB_H', true).
-record(m_candyroom_send_gift_tos,
        {id                     :: non_neg_integer(), % = 1, 32 bits
         gift_id                :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('M_CANDYROOM_SEND_GIFT_TOC_PB_H').
-define('M_CANDYROOM_SEND_GIFT_TOC_PB_H', true).
-record(m_candyroom_send_gift_toc,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_CANDYROOM_RECEIVE_GIFT_TOC_PB_H').
-define('M_CANDYROOM_RECEIVE_GIFT_TOC_PB_H', true).
-record(m_candyroom_receive_gift_toc,
        {
        }).
-endif.

-ifndef('M_CANDYROOM_BUY_TOS_PB_H').
-define('M_CANDYROOM_BUY_TOS_PB_H', true).
-record(m_candyroom_buy_tos,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_CANDYROOM_BUY_TOC_PB_H').
-define('M_CANDYROOM_BUY_TOC_PB_H', true).
-record(m_candyroom_buy_toc,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_CANDYROOM_GIFT_LOG_TOS_PB_H').
-define('M_CANDYROOM_GIFT_LOG_TOS_PB_H', true).
-record(m_candyroom_gift_log_tos,
        {type                   :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_CANDYROOM_GIFT_LOG_TOC_PB_H').
-define('M_CANDYROOM_GIFT_LOG_TOC_PB_H', true).
-record(m_candyroom_gift_log_toc,
        {type                   :: integer(),       % = 1, 32 bits
         logs = []              :: [pb_1604_candyroom:p_candyroom_log()] | undefined % = 2
        }).
-endif.

-ifndef('M_CANDYROOM_OVER_TOC_PB_H').
-define('M_CANDYROOM_OVER_TOC_PB_H', true).
-record(m_candyroom_over_toc,
        {rank                   :: integer(),       % = 1, 32 bits
         exp                    :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('P_CANDYROOM_RANK_PB_H').
-define('P_CANDYROOM_RANK_PB_H', true).
-record(p_candyroom_rank,
        {rank                   :: integer(),       % = 1, 32 bits
         id                     :: non_neg_integer(), % = 2, 32 bits
         name                   :: iolist(),        % = 3
         pop                    :: integer()        % = 4, 32 bits
        }).
-endif.

-ifndef('P_CANDYROOM_LOG_PB_H').
-define('P_CANDYROOM_LOG_PB_H', true).
-record(p_candyroom_log,
        {id                     :: non_neg_integer(), % = 1, 32 bits
         name                   :: iolist(),        % = 2
         num                    :: integer()        % = 3, 32 bits
        }).
-endif.

-endif.
