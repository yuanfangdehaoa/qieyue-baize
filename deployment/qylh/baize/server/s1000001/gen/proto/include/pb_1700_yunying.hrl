%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.5.1

-ifndef(pb_1700_yunying).
-define(pb_1700_yunying, true).

-define(pb_1700_yunying_gpb_version, "4.5.1").

-ifndef('M_YUNYING_LIST_TOS_PB_H').
-define('M_YUNYING_LIST_TOS_PB_H', true).
-record(m_yunying_list_tos,
        {
        }).
-endif.

-ifndef('M_YUNYING_LIST_TOC_PB_H').
-define('M_YUNYING_LIST_TOC_PB_H', true).
-record(m_yunying_list_toc,
        {activities = []        :: [pb_1700_yunying:p_yy_activity()] | undefined % = 1
        }).
-endif.

-ifndef('M_YUNYING_START_TOC_PB_H').
-define('M_YUNYING_START_TOC_PB_H', true).
-record(m_yunying_start_toc,
        {activity               :: pb_1700_yunying:p_yy_activity() % = 1
        }).
-endif.

-ifndef('M_YUNYING_STOP_TOC_PB_H').
-define('M_YUNYING_STOP_TOC_PB_H', true).
-record(m_yunying_stop_toc,
        {id                     :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_FETCH_TOS_PB_H').
-define('M_YUNYING_FETCH_TOS_PB_H', true).
-record(m_yunying_fetch_tos,
        {act_id                 :: integer(),       % = 1, 32 bits
         id                     :: integer(),       % = 2, 32 bits
         level                  :: integer()        % = 3, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_FETCH_TOC_PB_H').
-define('M_YUNYING_FETCH_TOC_PB_H', true).
-record(m_yunying_fetch_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         id                     :: integer(),       % = 2, 32 bits
         reward = #{}           :: #{integer() := integer()} | undefined % = 3
        }).
-endif.

-ifndef('M_YUNYING_UPDATE_TOC_PB_H').
-define('M_YUNYING_UPDATE_TOC_PB_H', true).
-record(m_yunying_update_toc,
        {type                   :: integer(),       % = 1, 32 bits
         rewards = []           :: [pb_1700_yunying:p_yy_reward()] | undefined % = 2
        }).
-endif.

-ifndef('M_YUNYING_INFO_TOS_PB_H').
-define('M_YUNYING_INFO_TOS_PB_H', true).
-record(m_yunying_info_tos,
        {id                     :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_INFO_TOC_PB_H').
-define('M_YUNYING_INFO_TOC_PB_H', true).
-record(m_yunying_info_toc,
        {id                     :: integer(),       % = 1, 32 bits
         tasks = []             :: [pb_1700_yunying:p_yy_task()] | undefined % = 2
        }).
-endif.

-ifndef('M_YUNYING_GIFT_TOS_PB_H').
-define('M_YUNYING_GIFT_TOS_PB_H', true).
-record(m_yunying_gift_tos,
        {
        }).
-endif.

-ifndef('M_YUNYING_GIFT_TOC_PB_H').
-define('M_YUNYING_GIFT_TOC_PB_H', true).
-record(m_yunying_gift_toc,
        {list = []              :: [pb_1700_yunying:p_yy_gift()] | undefined % = 1
        }).
-endif.

-ifndef('M_YUNYING_GIFT_FETCH_TOS_PB_H').
-define('M_YUNYING_GIFT_FETCH_TOS_PB_H', true).
-record(m_yunying_gift_fetch_tos,
        {act_id                 :: integer(),       % = 1, 32 bits
         id                     :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_GIFT_FETCH_TOC_PB_H').
-define('M_YUNYING_GIFT_FETCH_TOC_PB_H', true).
-record(m_yunying_gift_fetch_toc,
        {gift                   :: pb_1700_yunying:p_yy_gift() % = 1
        }).
-endif.

-ifndef('M_YUNYING_LOGS_TOS_PB_H').
-define('M_YUNYING_LOGS_TOS_PB_H', true).
-record(m_yunying_logs_tos,
        {act_id                 :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOGS_TOC_PB_H').
-define('M_YUNYING_LOGS_TOC_PB_H', true).
-record(m_yunying_logs_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         logs = []              :: [pb_1700_yunying:p_yy_log()] | undefined % = 2
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_INFO_TOS_PB_H').
-define('M_YUNYING_LOTTERY_INFO_TOS_PB_H', true).
-record(m_yunying_lottery_info_tos,
        {act_id                 :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_INFO_TOC_PB_H').
-define('M_YUNYING_LOTTERY_INFO_TOC_PB_H', true).
-record(m_yunying_lottery_info_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         items = #{}            :: #{integer() := pb_1700_yunying:p_yy_lottery_item()} | undefined, % = 2
         free_refresh           :: integer(),       % = 3, 32 bits
         free_crack             :: integer(),       % = 4, 32 bits
         crack                  :: integer()        % = 5, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_DO_TOS_PB_H').
-define('M_YUNYING_LOTTERY_DO_TOS_PB_H', true).
-record(m_yunying_lottery_do_tos,
        {act_id                 :: integer(),       % = 1, 32 bits
         pos                    :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_DO_TOC_PB_H').
-define('M_YUNYING_LOTTERY_DO_TOC_PB_H', true).
-record(m_yunying_lottery_do_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         items = #{}            :: #{integer() := pb_1700_yunying:p_yy_lottery_item()} | undefined, % = 2
         free_crack             :: integer(),       % = 3, 32 bits
         free_refresh           :: integer(),       % = 4, 32 bits
         crack                  :: integer()        % = 5, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_REFRESH_TOS_PB_H').
-define('M_YUNYING_LOTTERY_REFRESH_TOS_PB_H', true).
-record(m_yunying_lottery_refresh_tos,
        {act_id                 :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_REFRESH_TOC_PB_H').
-define('M_YUNYING_LOTTERY_REFRESH_TOC_PB_H', true).
-record(m_yunying_lottery_refresh_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         items = #{}            :: #{integer() := pb_1700_yunying:p_yy_lottery_item()} | undefined, % = 2
         free_refresh           :: integer()        % = 3, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOGS_UPDATE_TOC_PB_H').
-define('M_YUNYING_LOGS_UPDATE_TOC_PB_H', true).
-record(m_yunying_logs_update_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         log                    :: pb_1700_yunying:p_yy_log() % = 2
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_DRAW_TOS_PB_H').
-define('M_YUNYING_LOTTERY_DRAW_TOS_PB_H', true).
-record(m_yunying_lottery_draw_tos,
        {act_id                 :: integer(),       % = 1, 32 bits
         times                  :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTTERY_DRAW_TOC_PB_H').
-define('M_YUNYING_LOTTERY_DRAW_TOC_PB_H', true).
-record(m_yunying_lottery_draw_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         reward_ids = []        :: [integer()] | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTOINFO_TOS_PB_H').
-define('M_YUNYING_LOTOINFO_TOS_PB_H', true).
-record(m_yunying_lotoinfo_tos,
        {act_id                 :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTOINFO_TOC_PB_H').
-define('M_YUNYING_LOTOINFO_TOC_PB_H', true).
-record(m_yunying_lotoinfo_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         progress               :: integer(),       % = 2, 32 bits
         round                  :: integer() | undefined, % = 3, 32 bits
         hits = []              :: [integer()] | undefined % = 4, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTO_TOS_PB_H').
-define('M_YUNYING_LOTO_TOS_PB_H', true).
-record(m_yunying_loto_tos,
        {act_id                 :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTO_TOC_PB_H').
-define('M_YUNYING_LOTO_TOC_PB_H', true).
-record(m_yunying_loto_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         hit                    :: integer(),       % = 2, 32 bits
         progress               :: integer()        % = 3, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_LOTO_PROGRESS_TOC_PB_H').
-define('M_YUNYING_LOTO_PROGRESS_TOC_PB_H', true).
-record(m_yunying_loto_progress_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         progress               :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_SHOP_INFO_TOS_PB_H').
-define('M_YUNYING_SHOP_INFO_TOS_PB_H', true).
-record(m_yunying_shop_info_tos,
        {act_id                 :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_SHOP_INFO_TOC_PB_H').
-define('M_YUNYING_SHOP_INFO_TOC_PB_H', true).
-record(m_yunying_shop_info_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         list = []              :: [pb_1700_yunying:p_yy_shop()] | undefined, % = 2
         logs = []              :: [pb_1700_yunying:p_yy_shop_log()] | undefined, % = 3
         reward_time            :: integer(),       % = 4, 32 bits
         unlimit_sec            :: integer()        % = 5, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_SHOP_BUY_TOS_PB_H').
-define('M_YUNYING_SHOP_BUY_TOS_PB_H', true).
-record(m_yunying_shop_buy_tos,
        {act_id                 :: integer(),       % = 1, 32 bits
         shop_id                :: integer(),       % = 2, 32 bits
         num                    :: integer()        % = 3, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_SHOP_BUY_TOC_PB_H').
-define('M_YUNYING_SHOP_BUY_TOC_PB_H', true).
-record(m_yunying_shop_buy_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         shop                   :: pb_1700_yunying:p_yy_shop(), % = 2
         logs = []              :: [pb_1700_yunying:p_yy_shop_log()] | undefined % = 3
        }).
-endif.

-ifndef('M_YUNYING_SHOP_REWARD_LOG_TOS_PB_H').
-define('M_YUNYING_SHOP_REWARD_LOG_TOS_PB_H', true).
-record(m_yunying_shop_reward_log_tos,
        {act_id                 :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_YUNYING_SHOP_REWARD_LOG_TOC_PB_H').
-define('M_YUNYING_SHOP_REWARD_LOG_TOC_PB_H', true).
-record(m_yunying_shop_reward_log_toc,
        {act_id                 :: integer(),       % = 1, 32 bits
         logs = []              :: [pb_1700_yunying:p_yy_shop_reward_log()] | undefined % = 2
        }).
-endif.

-ifndef('P_YY_ACTIVITY_PB_H').
-define('P_YY_ACTIVITY_PB_H', true).
-record(p_yy_activity,
        {id                     :: integer(),       % = 1, 32 bits
         act_stime              :: integer(),       % = 2, 32 bits
         act_etime              :: integer(),       % = 3, 32 bits
         show_stime             :: integer(),       % = 4, 32 bits
         show_etime             :: integer()        % = 5, 32 bits
        }).
-endif.

-ifndef('P_YY_REWARD_PB_H').
-define('P_YY_REWARD_PB_H', true).
-record(p_yy_reward,
        {id                     :: integer(),       % = 1, 32 bits
         act_id                 :: integer(),       % = 2, 32 bits
         level                  :: integer(),       % = 3, 32 bits
         type                   :: integer(),       % = 4, 32 bits
         stype                  :: integer(),       % = 5, 32 bits
         name                   :: iolist(),        % = 6
         desc                   :: iolist(),        % = 7
         reqs                   :: iolist(),        % = 8
         reward                 :: iolist()         % = 9
        }).
-endif.

-ifndef('P_YY_TASK_PB_H').
-define('P_YY_TASK_PB_H', true).
-record(p_yy_task,
        {id                     :: integer(),       % = 1, 32 bits
         level                  :: integer(),       % = 2, 32 bits
         count                  :: integer(),       % = 3, 32 bits
         state                  :: integer()        % = 4, 32 bits
        }).
-endif.

-ifndef('P_YY_GIFT_PB_H').
-define('P_YY_GIFT_PB_H', true).
-record(p_yy_gift,
        {act_id                 :: integer(),       % = 1, 32 bits
         stime                  :: integer(),       % = 2, 32 bits
         etime                  :: integer(),       % = 3, 32 bits
         refund_time            :: integer(),       % = 4, 32 bits
         state                  :: integer()        % = 5, 32 bits
        }).
-endif.

-ifndef('P_YY_LOG_PB_H').
-define('P_YY_LOG_PB_H', true).
-record(p_yy_log,
        {role_id                :: non_neg_integer(), % = 1, 32 bits
         role_name              :: iolist(),        % = 2
         item_id                :: integer(),       % = 3, 32 bits
         item_num               :: integer()        % = 4, 32 bits
        }).
-endif.

-ifndef('P_YY_LOTTERY_ITEM_PB_H').
-define('P_YY_LOTTERY_ITEM_PB_H', true).
-record(p_yy_lottery_item,
        {group                  :: integer(),       % = 1, 32 bits
         reward_id              :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('P_YY_SHOP_PB_H').
-define('P_YY_SHOP_PB_H', true).
-record(p_yy_shop,
        {id                     :: integer(),       % = 1, 32 bits
         buy_num                :: integer(),       % = 2, 32 bits
         progress               :: integer()        % = 3, 32 bits
        }).
-endif.

-ifndef('P_YY_SHOP_LOG_PB_H').
-define('P_YY_SHOP_LOG_PB_H', true).
-record(p_yy_shop_log,
        {role_id                :: non_neg_integer(), % = 1, 32 bits
         role_name              :: iolist(),        % = 2
         suid                   :: integer(),       % = 3, 32 bits
         shop_id                :: integer(),       % = 4, 32 bits
         reward_id              :: integer()        % = 5, 32 bits
        }).
-endif.

-ifndef('P_YY_SHOP_REWARD_LOG_PB_H').
-define('P_YY_SHOP_REWARD_LOG_PB_H', true).
-record(p_yy_shop_reward_log,
        {id                     :: integer(),       % = 1, 32 bits
         role_id                :: non_neg_integer(), % = 2, 32 bits
         role_name              :: iolist(),        % = 3
         suid                   :: integer(),       % = 4, 32 bits
         num                    :: integer()        % = 5, 32 bits
        }).
-endif.

-endif.
