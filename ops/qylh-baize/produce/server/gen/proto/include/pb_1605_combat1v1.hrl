%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.5.1

-ifndef(pb_1605_combat1v1).
-define(pb_1605_combat1v1, true).

-define(pb_1605_combat1v1_gpb_version, "4.5.1").

-ifndef('M_COMBAT1V1_INFO_TOS_PB_H').
-define('M_COMBAT1V1_INFO_TOS_PB_H', true).
-record(m_combat1v1_info_tos,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_INFO_TOC_PB_H').
-define('M_COMBAT1V1_INFO_TOC_PB_H', true).
-record(m_combat1v1_info_toc,
        {grade                  :: integer(),       % = 1, 32 bits
         score                  :: integer(),       % = 2, 32 bits
         today_join             :: integer(),       % = 3, 32 bits
         today_merit            :: integer(),       % = 4, 32 bits
         merit                  :: integer(),       % = 5, 32 bits
         join_reward = #{}      :: #{integer() := boolean() | 0 | 1} | undefined, % = 6
         last_grade             :: integer(),       % = 7, 32 bits
         daily_reward           :: integer(),       % = 8, 32 bits
         merit_reward = []      :: [integer()] | undefined, % = 9, 32 bits
         mode                   :: iolist(),        % = 10
         remain_join            :: integer(),       % = 11, 32 bits
         remain_buy             :: integer(),       % = 12, 32 bits
         season_end             :: integer()        % = 13, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_MATCH_START_TOS_PB_H').
-define('M_COMBAT1V1_MATCH_START_TOS_PB_H', true).
-record(m_combat1v1_match_start_tos,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_MATCH_START_TOC_PB_H').
-define('M_COMBAT1V1_MATCH_START_TOC_PB_H', true).
-record(m_combat1v1_match_start_toc,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_MATCH_CANCEL_TOS_PB_H').
-define('M_COMBAT1V1_MATCH_CANCEL_TOS_PB_H', true).
-record(m_combat1v1_match_cancel_tos,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_MATCH_CANCEL_TOC_PB_H').
-define('M_COMBAT1V1_MATCH_CANCEL_TOC_PB_H', true).
-record(m_combat1v1_match_cancel_toc,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_MATCH_SUCC_TOC_PB_H').
-define('M_COMBAT1V1_MATCH_SUCC_TOC_PB_H', true).
-record(m_combat1v1_match_succ_toc,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_BATTLE_PREPARE_TOS_PB_H').
-define('M_COMBAT1V1_BATTLE_PREPARE_TOS_PB_H', true).
-record(m_combat1v1_battle_prepare_tos,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_BATTLE_PREPARE_TOC_PB_H').
-define('M_COMBAT1V1_BATTLE_PREPARE_TOC_PB_H', true).
-record(m_combat1v1_battle_prepare_toc,
        {opponent               :: non_neg_integer(), % = 1, 32 bits
         pos                    :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_BATTLE_START_TOC_PB_H').
-define('M_COMBAT1V1_BATTLE_START_TOC_PB_H', true).
-record(m_combat1v1_battle_start_toc,
        {ptime                  :: integer() | undefined, % = 1, 32 bits
         etime                  :: integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_BATTLE_RESULT_TOC_PB_H').
-define('M_COMBAT1V1_BATTLE_RESULT_TOC_PB_H', true).
-record(m_combat1v1_battle_result_toc,
        {is_win                 :: boolean() | 0 | 1, % = 1
         grade                  :: integer(),       % = 2, 32 bits
         score                  :: integer(),       % = 3, 32 bits
         chg                    :: integer(),       % = 4, 32 bits
         rewards = #{}          :: #{integer() := integer()} | undefined % = 5
        }).
-endif.

-ifndef('M_COMBAT1V1_JOIN_REWARD_TOS_PB_H').
-define('M_COMBAT1V1_JOIN_REWARD_TOS_PB_H', true).
-record(m_combat1v1_join_reward_tos,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_JOIN_REWARD_TOC_PB_H').
-define('M_COMBAT1V1_JOIN_REWARD_TOC_PB_H', true).
-record(m_combat1v1_join_reward_toc,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_DAILY_REWARD_TOS_PB_H').
-define('M_COMBAT1V1_DAILY_REWARD_TOS_PB_H', true).
-record(m_combat1v1_daily_reward_tos,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_DAILY_REWARD_TOC_PB_H').
-define('M_COMBAT1V1_DAILY_REWARD_TOC_PB_H', true).
-record(m_combat1v1_daily_reward_toc,
        {
        }).
-endif.

-ifndef('M_COMBAT1V1_MERIT_REWARD_TOS_PB_H').
-define('M_COMBAT1V1_MERIT_REWARD_TOS_PB_H', true).
-record(m_combat1v1_merit_reward_tos,
        {merit                  :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_MERIT_REWARD_TOC_PB_H').
-define('M_COMBAT1V1_MERIT_REWARD_TOC_PB_H', true).
-record(m_combat1v1_merit_reward_toc,
        {merit                  :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_BUY_TIMES_TOS_PB_H').
-define('M_COMBAT1V1_BUY_TIMES_TOS_PB_H', true).
-record(m_combat1v1_buy_times_tos,
        {num                    :: integer()        % = 1, 32 bits
        }).
-endif.

-ifndef('M_COMBAT1V1_BUY_TIMES_TOC_PB_H').
-define('M_COMBAT1V1_BUY_TIMES_TOC_PB_H', true).
-record(m_combat1v1_buy_times_toc,
        {remain_join            :: integer(),       % = 1, 32 bits
         remain_buy             :: integer()        % = 2, 32 bits
        }).
-endif.

-endif.
