%% Automatically generated, do not edit
%% Generated by parse_table.go
-ifndef(TABLE_HRL).
-define(TABLE_HRL, ok).



-define(DB_ROLE_INFO, role_info).
-record(role_info, { 
	id % 角色id
	, userid % 账号id {GameChan, Account}
	, name % 名称
	, career % 职业
	, gender % 性别
	, level % 等级
	, exp % 经验
	, wake % 觉醒等级
	, charm % 魅力
	, figure % 形象 key=FIGURE_XXX,val=#p_aspect
	, icon % 玩家头像 p_icon
	, pkmode % PK模式
	, crime % 罪恶值
	, login % 上次登录时间
	, logout % 上次登出时间
	, state % 玩家状态
	, ctime % 创角时间
	, zoneid % 区服id
	, team % 队伍id
	, suid % 服务器id
}).

-define(DB_ROLE_ATTR, role_attr).
-record(role_attr, { 
	id % 角色id
	, buffs % key=Group, val=#p_buff
	, attr % 属性
	, power % 最高战力
}).

-define(DB_ROLE_SITE, role_site).
-record(role_site, { 
	id % 角色id
	, pre % 跳转前场景
	, cur % 当前场景
}).

-define(DB_ROLE_BAG, role_bag).
-record(role_bag, { 
	id % 角色id
	, count % key={BagID,ItemID,Bind}, val=Num
	, group % key={BagID,ItemID,Bind}, val=[CellID]
	, cells % key=BagID, val=#cell
	, items % key=CellID, val=#p_item
	, money % key=ItemID, val=Num
	, exceed % 超过当天获得上限的钱币(key=ItemID, val=Num)
}).

-define(DB_ROLE_TASK, role_task).
-record(role_task, { 
	id = 0 % 角色id
	, listen = #{} % key=Event, val=[TaskID]
	, accept = #{} % key=TaskID, val=#task
	, submit = [] % 已提交 [TaskID]
	, reward = [] % 已领取奖励的章节 [ChapterID]
	, next = 0 % 下一个可接的主线任务
}).

-define(DB_ROLE_SKILL, role_skill).
-record(role_skill, { 
	id % 角色id
	, skills = #{} % key=SkillID, val=Level
	, point = 0 % 技能点
	, puton = #{} % key=SkillID, val=Pos
	, endcd = #{} % key=SkillID, val=EndCD
	, auto = [] % [SkillID]
}).

-define(DB_ROLE_EQUIP, role_equip).
-record(role_equip, { 
	id = 0 % 角色id
	, equips = #{} % key=Locus, val=cell.id
	, strengths = #{} % key=Locus, val=#equip_strength
	, stones = #{} % key=Locus, val=#{hole=>item.id}
	, strength_suite_id = 0 % 强化套装id
	, suites = #{} % key=套装等级, val=#suite
	, smelt = 1 % 熔炼id
	, smelt_exp = 0 % 熔炼当前经验
	, suite_cost = #{} % 套装部位消耗, key=Slot,val={BList,List}
	, casts = #{} % 铸造, key=Locus, val=#equip_cast
	, refine = #{} % 洗练, key=Locus, val=#p_refine_slot
}).

-define(DB_ROLE_DUNGE, role_dunge).
-record(role_dunge, { 
	id = 0 % 角色id
	, enter = #{} % key=SType, val=EnterTime
	, star = #{} % 评星 key=SType, val=any
	, misc = #{} % 其他数据 key=SType, val=any
}).

-define(DB_DUNGE_MAGIC, dunge_magic).
-record(dunge_magic, { 
	id = 0 % 角色id
	, clear_floor = 0 % 已通关到第几层
	, loto_times = 0 % 可用转盘次数
	, loto_round = 1 % 第几轮
	, loto_hits = [] % 已中的奖励id [SeqID]
	, daily_gift = false % 是否已领取每日礼包
}).

-define(DB_ROLE_ONLINE, role_online).
-record(role_online, { 
	id % 角色id
	, today % 今日在线时长
	, total % 总在线时长
}).

-define(DB_ROLE_SEARCHTREASURE, role_searchtreasure).
-record(role_searchtreasure, { 
	id = 0 % 角色id
	, searchtreaure_item_maps = #{} % #searchtreaure_item
	, yy_rewards = #{} % 主题抽奖已抽中物品,key=yyactid,val=[reward_id]
	, equips = [] % 已抽中的装备（装备抽奖大奖记录）
	, get_key_timestamp = 0 % 记录领取寻宝钥匙的时间戳
}).

-define(DB_ROLE_MALL, role_mall).
-record(role_mall, { 
	id = 0 % 角色id
	, refresh_type_maps = #{} % #mall_bought
	, limit_maps = #{} % #m_mall_limit_item
}).

-define(DB_ROLE_TRAIN, role_train).
-record(role_train, { 
	id = 0 % 角色id
	, trains = #{} % key=TrainType, val=#p_train
	, mounts = #{} % key=TrainType, val=#mount
	, morphs = #{} % key=TrainType, val=[#p_morph]
	, using = #{} % key=TrainType, val=TrainID
}).

-define(DB_ROLE_VIP, role_vip).
-record(role_vip, { 
	id = 0 % 角色id
	, level = 0 % vip 等级
	, exp = 0 % vip 经验
	, etime = 0 % vip 到期时间
	, type = 0 % vip 类型
	, card = 0 % 激活卡id
	, pool = 0 % 经验池
	, fetch = [] % 已领取的等级奖励 [VipLv]
	, auto = false % 是否自动领取 vip 经验
	, mcard = false % 是否购买月卡
	, mfetch = #{} % 月卡领取, key=day, val=is_fetch
	, invest = #{} % 投资计划 key=type, val=#r_vip_invest
	, rebate % vip返还 #r_vip_rebate
	, taste % 体验卡信息
}).

-define(DB_ROLE_VIP2, role_vip2).
-record(role_vip2, { 
	id = 0 % 角色id
	, level = 0 % vip 等级
	, exp = 0 % vip 经验
	, etime = 0 % vip 到期时间
	, fetch = [] % 已领取的等级奖励 [VipLv]
}).

-define(DB_ROLE_WAKE, role_wake).
-record(role_wake, { 
	id = 0 % 角色id
	, step = 1 % 当前觉醒阶段
	, tasks = #{} % 任务进度
	, grid = 0 % 当前激活到的格子
}).

-define(DB_ROLE_MAGIC_CARD, role_magic_card).
-record(role_magic_card, { 
	id = 0 % 角色id
	, cards = #{} % key=pos, val=uid
	, suite_id = 0 % 套装id
	, auto = 1 % 是否自动分解(0-否，1-是)
	, colors = [1,2] % 自动分解颜色
}).

-define(DB_ROLE_GUILD, role_guild).
-record(role_guild, { 
	id = 0 % 角色id
	, guild = 0 % 帮派id
	, post = 0 % 帮派职位
	, apply = [] % 申请的帮派列表 [GuildID]
	, score = 0 % 仓库积分
}).

-define(DB_ROLE_FASHION, role_fashion).
-record(role_fashion, { 
	id = 0 % 角色id
	, fashions = #{} % key=id, val=#p_fashion
	, putons = #{} % 当前已穿戴的id, key=Locus, val=id
}).

-define(DB_ROLE_TITLE, role_title).
-record(role_title, { 
	id = 0 % 角色id
	, titles = #{} % key=id, val=#p_title
	, puton_id = 0 % 当前已穿戴的id
}).

-define(DB_ROLE_MCHUNT, role_mchunt).
-record(role_mchunt, { 
	id = 0 % 角色id
	, times = 0 % 今日次数
	, hunt = 0 % 寻宝类型(1=寻宝1次; 2=寻宝10次)
	, dig = 0 % 挖宝类型(1=劝服; 2=降服; 3=吸收)
	, etime = 0 % 结束时间
	, scene = 0 % 场景id
	, pos = [] % 坐标列表 [#p_coord]
	, luck = 0 % 幸运值，每30次必出红卡
}).

-define(DB_ROLE_TARGET, role_target).
-record(role_target, { 
	id = 0 % 角色id
	, tasks = #{} % key=task.id, val=#p_target_task
	, targets = #{} % key=id, val=领取状态(0-未完成，1-已完成，2-已领取)
}).

-define(DB_ROLE_WELFARE, role_welfare).
-record(role_welfare, { 
	id = 0 % 角色id
	, level = [] % 已领取的等级奖励
	, power = [] % 已领取的战力奖励
	, online = [] % 已领取的在线时长奖励
	, sign = #{} % 每日签到#welfare_sign
	, notice = [] % 已领取的公告奖励
	, res = 0 % 是否已领取资源大奖
	, misc = #{} % 其他福利
	, login_choose_reward = [] % 上线福利任意选
}).

-define(DB_ROLE_COUNT, role_count).
-record(role_count, { 
	id = 0 % 角色id
	, counter = #{} % 计数器
	, reset = 0 % 上次重置时间
}).

-define(DB_ROLE_MISC, role_misc).
-record(role_misc, { 
	id = 0 % 角色id
	, sys_opened = [] % 已开放的系统列表 [SysID]
	, offline_msg = [] % 离线消息
	, enemy_suids = #{} % 敌对服务器
}).

-define(DB_ROLE_BEAST, role_beast).
-record(role_beast, { 
	id = 0 % 角色id
	, beasts = #{} % 神兽
	, summon_max = 3 % 助战最大数量
}).

-define(DB_ROLE_DAILY, role_daily).
-record(role_daily, { 
	id = 0 % 角色id
	, list = [] % 进度
	, rewarded = [] % 领取过的奖励
	, total = 0 % 累计活跃度
}).

-define(DB_ROLE_ILLUSION, role_illusion).
-record(role_illusion, { 
	id = 0 % 角色id
	, level = 0 % 等级
	, exp = 0 % 经验
	, show_id = 0 % 形象ID
	, show = true % 显示
}).

-define(DB_ROLE_WEEKLY, role_weekly).
-record(role_weekly, { 
	id = 0 % 角色id
	, list = [] % 进度
	, rewarded = [] % 领取过的奖励
	, total = 0 % 累计活跃度
}).

-define(DB_ROLE_ESCORT, role_escort).
-record(role_escort, { 
	id = 0 % 角色id
	, quality = 0 % 品质
	, level = 0 % 刷新时的等级
	, progress = 0 % 进度
	, end_time = 0 % 护送结束时间
	, is_double = 0 % 是否双倍护送
}).

-define(DB_ROLE_REALNAME, role_realname).
-record(role_realname, { 
	id = 0 % 角色id
	, is_first = true % 是否首次
	, area_code % 地区代码
	, id_card % 证件号码
	, real_name % 真实姓名
}).

-define(DB_ROLE_PAY, role_pay).
-record(role_pay, { 
	id % 玩家id
	, payments = [] % 充值信息
}).

-define(DB_ROLE_MONITOR, role_monitor).
-record(role_monitor, { 
	id % 玩家id
	, gain = #{} % 获得(key={RuleID, val={ItemID, StartDT, EndDT, Num})
}).

-define(DB_ROLE_YYLOGIN, role_yylogin).
-record(role_yylogin, { 
	id % 玩家id
	, days = 0 % 累计登录天数
	, list = [] % 领奖的天数
}).

-define(DB_ROLE_AFK, role_afk).
-record(role_afk, { 
	id % 玩家id
	, time = 0 % 剩余离线时长
}).

-define(DB_ROLE_ACHIEVE, role_achieve).
-record(role_achieve, { 
	id % 玩家id
	, achieves = #{} % 成就状态(key=id,val=p_achieve)
}).

-define(DB_ROLE_PET, role_pet).
-record(role_pet, { 
	id % 玩家id
	, pets = #{} % 宠物(key=order, val=uid)
	, strong = #{} % 宠物训练(key=order, val=训练阶段)
	, strong_attr = #{} % 宠物训练(key=order, val=训练加的属性)
	, fight = 0 % 出战的order
	, costs = #{} % 突破消耗,key=order,val={绑定物品，非绑定物品}
	, equips = #{} % PetID=>(SlotID=>CellID)
}).

-define(DB_ROLE_FIRSTPAY, role_firstpay).
-record(role_firstpay, { 
	id % 玩家id
	, is_payed = false % 是否首充
	, time % 首充时间
	, fetch = [] % 领取奖励记录
}).

-define(DB_ROLE_YY_GIFT, role_yy_gift).
-record(role_yy_gift, { 
	id % 玩家
	, list = #{} % 活动数据 key=act_id, val=#p_yy_gift
}).

-define(DB_ROLE_WANTED, role_wanted).
-record(role_wanted, { 
	id % 角色id
	, task % #p_wanted_task
}).

-define(DB_ROLE_ARENA, role_arena).
-record(role_arena, { 
	id % 角色id
	, rank = 0 % 历史最高排名
	, fetch = [] % 领取过的最高排名奖励
}).

-define(DB_ROLE_MARRIAGE, role_marriage).
-record(role_marriage, { 
	id % 角色id
	, steps = [] % 结婚步骤 [#p_marriage_step{}]
	, ring % 婚戒信息 p_marriage_ring
	, history = #{} % 结婚各类型总次数
}).

-define(DB_ROLE_FINDBACK, role_findback).
-record(role_findback, { 
	id % 角色id
	, level = 0 % 用于找回的等级
	, lists = [] % 找回信息[p_findback]
	, floors = #{} % 副本通关层数key=stype, val=floor
}).

-define(DB_ROLE_BABY, role_baby).
-record(role_baby, { 
	id % 角色id
	, progress = #{} % 出生进度,key=gender, val=进度
	, baby = #{} % 子女培养,key=gender,val=#p_baby
	, order = #{} % 进阶,key=子女id,val=#p_baby_order
	, is_hide = false % 是否隐藏子女
	, figure = 0 % 当前显示的宝宝id
	, equips = #{} % 装备,key=位置，val=uid
	, likes = [] % 点赞过得角色id列表
	, wings = #{} % 翅膀
	, wing_id = 0 % 翅膀幻化id
}).

-define(DB_ROLE_YY_LOTTERY, role_yy_lottery).
-record(role_yy_lottery, { 
	id % 角色id
	, acts = #{} % 活动数据 key=act_id, val=#yy_lottery
}).

-define(DB_ROLE_CASTHOUSE, role_casthouse).
-record(role_casthouse, { 
	id % 角色id
	, grid = 0 % 所在格子id
	, turn = 1 % 当前轮数
	, num = 0 % 要走的步数
}).

-define(DB_ROLE_TALENT, role_talent).
-record(role_talent, { 
	id % 角色id
	, total = 0 % 天赋点总数
	, remain = 0 % 剩余天赋点
	, allot = #{} % 天赋点分配 #{Group=>Point}
	, skills = #{} % 技能列表 #{SkillID=>SkillLv}
}).

-define(DB_ROLE_SOUL, role_soul).
-record(role_soul, { 
	id = 0 % 角色id
	, souls = #{} % key=pos, val=uid
	, auto = 1 % 是否自动分解(0-否，1-是)
	, color = 3 % 自动分解颜色
}).

-define(DB_ROLE_COMPOSE, role_compose).
-record(role_compose, { 
	id = 0 % 角色id
	, counts = #{} % key=记录主键, val=次数
	, keys = [] % 已合成过的列表
}).

-define(DB_DUNGE_GOD, dunge_god).
-record(dunge_god, { 
	id = 0 % 角色id
	, cur_wave = 0 % 当前挑战波数
	, max_wave = 0 % 历史最高波数
	, rewarded = [] % 已领取的首通奖励
	, barriers = [] % 障碍物
}).

-define(DB_ROLE_ILLUSTRATION, role_illustration).
-record(role_illustration, { 
	id = 0 % 角色id
	, list = [] % 图鉴列表
}).

-define(DB_ROLE_ACTPAY, role_actpay).
-record(role_actpay, { 
	id % 玩家id
	, acts = #{} % 活动数据 p_actpay
}).

-define(DB_ROLE_GOD_EQUIPS, role_god_equips).
-record(role_god_equips, { 
	id % 玩家id
	, equips = #{} % key=位置,val=uid
}).

-define(DB_ROLE_ACTINVEST, role_actinvest).
-record(role_actinvest, { 
	id % 玩家id
	, acts = #{} % r_actinvest
}).

-define(DB_ROLE_MECHA, role_mecha).
-record(role_mecha, { 
	id % 玩家id
	, mechas = #{} % p_mecha
	, use_id = 0 % 正在使用的机甲
	, equips = #{} % 机甲装备,key=机甲id, val=#{key=位置,val=uid}
}).

-define(DB_ROLE_SUB_EQUIPS, role_sub_equips).
-record(role_sub_equips, { 
	id % 玩家id
	, equips = #{} % key=装备子类型,val=#{key=位置,val=uid}
}).

-define(DB_ROLE_SIEGEWAR, role_siegewar).
-record(role_siegewar, { 
	id % 玩家id
	, medal = 0 % 勋章进度
	, fetch = [] % 已领取奖励
}).

-define(DB_ROLE_RICHMAN, role_richman).
-record(role_richman, { 
	id % 玩家id
	, curr_round = 1 % 当前圈数
	, curr_grid = 1 % 当前格子
	, lucky_round = 1 % 第几轮幸运奖励
	, lucky_fetch = [] % 已领取幸运奖励
	, round_fetch = [] % 已领取圈数奖励
	, dice_gain = #{} % 骰子获取情况
	, act_stime = 0 % 活动的开始时间
	, act_etime = 0 % 活动的结束时间
}).

-define(DB_ROLE_LUCKYWHEEL, role_luckywheel).
-record(role_luckywheel, { 
	id % 玩家id
	, round = 1 % 当前圈数
	, fetch = [] % 已领取格子奖励
	, period = 0 % 活动期数
}).

-define(DB_ROLE_ARTIFACT, role_artifact).
-record(role_artifact, { 
	id % 玩家id
	, artis = #{} % 神器 ArtiID => #p_artifact
	, elems = #{} % 元素 ArtiType => [#p_artielem]
}).

-define(DB_ROLE_TOTEM, role_totem).
-record(role_totem, { 
	id = 0 % 角色id
	, totems = #{} % 图腾
	, summon_max = 3 % 助战最大数量
}).

-define(DB_ROLE_FLOP_GIFT, role_flop_gift).
-record(role_flop_gift, { 
	id = 0 % 角色id
	, level = 1 % 本次活动玩家等级，每次重置时获取玩家当前等级
	, last_secs = 0 % 上次参加时间戳
	, cur_round = 1 % 当前轮数
	, rewards_round = #{} % 所有轮已抽取奖励信息 #{ Round => [{Pos, PosFlop, ItemID, Count}] }
}).



-define(DB_GUILD_INFO, guild_info).
-record(guild_info, { 
	id % 帮派id
	, name % 帮派名
	, ctime % 创建时间
	, level % 等级
	, fund % 资金
	, notice % 公告
	, modify % 公告修改次数
	, membs % 成员列表 [#guild_memb]
	, power % 帮派战力
	, rank % 帮派排名
	, apply % 申请加入列表 [RoleID]
	, runfor % 职位申请列表 [{RoleID, Post}]
	, impeach % 弹劾信息 {OriginID, [AgreeID]}
	, setting % 帮派设置 #{}
}).

-define(DB_GUILD_DEPOT, guild_depot).
-record(guild_depot, { 
	id % 帮派id
	, cells % 空格子
	, items % 道具列表 #{}
}).

-define(DB_GUILD_REDENVELOPE, guild_redenvelope).
-record(guild_redenvelope, { 
	id % 帮派id
	, red_envelopes = #{} % 红包
	, records % 记录
}).



-define(DB_GAME_USER, game_user).
-record(game_user, { 
	id % {GameChan, Account}
	, gamechan % 游戏渠道
	, account % 渠道账号
	, platform % 平台名称
	, game_id % 游戏id
	, chan_id % 渠道id
	, type % 账号类型(0=普通,1=GM)
	, regip % 注册ip
	, ctime % 注册时间
	, roles % 角色id列表
}).

-define(DB_GAME_RANK, game_rank).
-record(game_rank, { 
	id % 榜单id
	, ranklist % 榜单列表 [#rankitem]
	, alldata % 榜单数据 key=RoleID, val=any
}).

-define(DB_GAME_MISC, game_misc).
-record(game_misc, { 
	key % key
	, val % val
}).

-define(DB_MAILBOX, mailbox).
-record(mailbox, { 
	owner % 角色id
	, mailid % 邮件递增id
	, mails % key=MailID, val=#mail
}).

-define(DB_FRIEND, friend).
-record(friend, { 
	id % role_id
	, applied = [] % 申请加自己好友的列表
	, friend_num = 0 % 好友数量
	, roles = #{} % 玩家信息
}).

-define(DB_CHAT_CONTACT, chat_contact).
-record(chat_contact, { 
	id % role_id
	, contacts = [] % role_id
}).

-define(DB_TRADE, trade).
-record(trade, { 
	id % 唯一id
	, type % 1=市场交易; 2=指定交易
	, owner % 所有者
	, item % #p_item
	, time % 上架时间
	, price % 单价
	, tax % 税率
}).

-define(DB_YY_INFO, yy_info).
-record(yy_info, { 
	id % 活动id
	, settle = false % 是否已结算
	, misc = #{} % 杂项数据
}).

-define(DB_YY_ROLE, yy_role).
-record(yy_role, { 
	key % {ActID, RoleID}
	, tasks = #{} % key=TaskID, val=#yy_task
	, finish % 完成该活动所有档次的时间
	, extra = #{} % 存放个人的活动数据
}).

-define(DB_MIRROR, mirror).
-record(mirror, { 
	id % role_id
	, name % 
	, buffs % 
	, attr % 
	, skills % 
	, power % 
	, level % 
	, career % 
	, gender % 
	, viplv % 
	, figure % 
	, guild % 
	, gname % 
}).

-define(DB_ARENA, arena).
-record(arena, { 
	rank % 排名
	, role_id % 玩家ID
}).

-define(DB_ARENA_MISC, arena_misc).
-record(arena_misc, { 
	id % role_id
	, sti_times = 0 % 激励次数
	, sti_date % 激励日期
}).

-define(DB_REDENVELOPE, redenvelope).
-record(redenvelope, { 
	id % 唯一id
	, red_envelope % #p_redenvelope
}).

-define(DB_DATING, dating).
-record(dating, { 
	id % role_id
	, tags = [] % 标签
	, flowers = #{} % 收花
	, flirted = 0 % 被撩次数
}).

-define(DB_MARRIAGE, marriage).
-record(marriage, { 
	id % role_id
	, marry_with = 0 % 结婚对象
	, be_proposed % 被求婚 #marriage_proposal
	, propose_to = 0 % 向谁求婚
	, types = #{} % 结婚档次统计key=type, val=count
	, marry_date % 结婚日期
	, wcount = 0 % 举办婚礼次数
	, wtime % 婚礼时间
	, has_marry = false % 是否结过婚
}).

-define(DB_WEDDING, wedding).
-record(wedding, { 
	time % {StartTime, EndTime}
	, couple = [] % [role_id, role_id]
	, invite = [] % 已邀请
	, request = [] % 索要请柬
	, add = 0 % 增加上限
	, finish = false % 当前战场人数
}).

-define(DB_GW_FIELD, gw_field).
-record(gw_field, { 
	id % FieldID
	, zoneid % 赛区id(1=神; 2=圣; 3=天; 4=地; 5=凡)
	, guilds % 对战帮派 [GuildID]
	, winner % 胜利帮派 GuildID
}).

-define(DB_GW_GUILD, gw_guild).
-record(gw_guild, { 
	id % 帮派id
	, field % FiledID
	, group % 分组id(1=蓝方; 2=红方)
	, power % 公会战力
	, roles % 进入战场的玩家 [RoleID]
	, role % 当前战场人数
	, score % 公会积分
	, rank % 排名(FieldID*10+Rank)
}).

-define(DB_COMBAT1V1_ROLE, combat1v1_role).
-record(combat1v1_role, { 
	id % 角色id
	, grade = 0 % 段位
	, score = 0 % 积分
	, today_merit = 0 % 今日功勋
	, merit = 0 % 功勋
	, join = 0 % 总参与次数
	, keep_win = 0 % 连续胜利次数
	, keep_lose = 0 % 连续输的次数
	, last_grade = 0 % 昨日段位
	, today_join = 0 % 今日参与场次
	, join_reward = #{} % 场次奖励#{场次=>是否领取}
	, merit_reward = [] % 功勋奖励
	, buy_times = 0 % 购买次数
}).

-define(DB_YY_SHOP_ACT, yy_shop_act).
-record(yy_shop_act, { 
	act_id % 活动ID
	, world_lv % 开启时的世界等级
	, day % 活动第几天
	, shop = #{} % Key=ShopID, Val=r_yy_shop
	, join_log = [] % 参与记录
	, reward_log = [] % 奖励记录
}).



-define(DB_CLS_NODE, cls_node).
-record(cls_node, { 
	suid % 服务器id
	, type % 服务器类型
	, name % 节点名
	, otime % 开服时间
	, level % 世界等级
	, merge % 合服列表
	, conn % 是否已连接
	, group % #{Rule=>GroupID}
}).



-endif.
